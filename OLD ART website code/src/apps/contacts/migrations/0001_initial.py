# -*- coding: utf-8 -*-
# Generated by Django 1.11.20 on 2019-11-14 11:39
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import google_maps.fields
import libs.multiselect_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='address')),
                ('city', models.CharField(max_length=255, verbose_name='city')),
                ('region', models.CharField(blank=True, max_length=64, verbose_name='region')),
                ('zip', models.CharField(blank=True, max_length=32, verbose_name='zip')),
                ('email', models.EmailField(max_length=254, verbose_name='e-mail')),
                ('coords', google_maps.fields.GoogleCoordsField(blank=True, help_text='Double click on the map places marker', verbose_name='coords')),
                ('sort_order', models.PositiveIntegerField(verbose_name='sort order')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='change date')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
                'ordering': ('sort_order',),
            },
        ),
        migrations.CreateModel(
            name='ContactsConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, help_text='for seo, preview and breadcrumbs', max_length=128, verbose_name='Title')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('button_text', models.TextField(blank=True, max_length=64, verbose_name='Button text')),
                ('text_top', ckeditor.fields.CKEditorUploadField(blank=True, help_text='Image sizes: from <b>800x450</b> to <b>1024x576</b>', verbose_name='Content top')),
                ('text_bottom', ckeditor.fields.CKEditorUploadField(blank=True, help_text='Image sizes: from <b>800x450</b> to <b>1024x576</b>', verbose_name='Content bottom')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='change date')),
                ('header', models.TextField(max_length=255, verbose_name='Header')),
                ('license', models.TextField(blank=True, max_length=255, verbose_name='License')),
            ],
            options={
                'verbose_name': 'settings',
                'abstract': False,
                'default_permissions': ('change',),
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='name')),
                ('phone', models.CharField(blank=True, max_length=32, verbose_name='phone')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='e-mail')),
                ('message', models.TextField(max_length=2048, verbose_name='message')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='date sent')),
                ('referer', models.CharField(blank=True, editable=False, max_length=512, verbose_name='from page')),
            ],
            options={
                'verbose_name': 'message',
                'verbose_name_plural': 'messages',
                'ordering': ('-date',),
                'default_permissions': ('delete',),
            },
        ),
        migrations.CreateModel(
            name='NotificationReceiver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='e-mail')),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receivers', to='contacts.ContactsConfig')),
            ],
            options={
                'verbose_name': 'notification receiver',
                'verbose_name_plural': 'notification receivers',
            },
        ),
        migrations.CreateModel(
            name='OpeningHours',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weekdays', libs.multiselect_field.fields.MultiSelectField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], max_length=255, verbose_name='weekdays')),
                ('start_time', models.TimeField(null=True, verbose_name='from')),
                ('end_time', models.TimeField(null=True, verbose_name='to')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hours', to='contacts.Address')),
            ],
            options={
                'verbose_name': 'opening hours sequence',
                'verbose_name_plural': 'opening hours sequences',
                'ordering': ('weekdays',),
            },
        ),
        migrations.CreateModel(
            name='PhoneNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=255, verbose_name='number')),
                ('sort_order', models.PositiveIntegerField(verbose_name='sort order')),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='contacts.Address')),
            ],
            options={
                'verbose_name': 'phone',
                'verbose_name_plural': 'phones',
                'ordering': ('sort_order',),
            },
        ),
    ]
